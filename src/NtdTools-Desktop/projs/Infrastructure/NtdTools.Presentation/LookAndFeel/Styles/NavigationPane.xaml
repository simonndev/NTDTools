<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:nav="clr-namespace:NtdTools.Presentation.Navigation"
                    xmlns:converters="clr-namespace:NtdTools.Presentation.Converters">

    <converters:BooleanToVisibilityHiddenConverter x:Key="BTVHC" />
    <converters:MultiBoolToVisibilityHiddenConverter x:Key="MultiBool2VisHid" />
    <converters:EmptyTextToVisibilityCollapsedConverter x:Key="EmpTxt2VisCol" />

    <Style x:Key="NavigationMenuItemHeadingStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>

    <Style x:Key="NavigationMenuItemSubHeadingStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    </Style>
    
    <DataTemplate x:Key="NavigationItemMenuInputTemplate">
        <TextBox HorizontalAlignment="Stretch"
                 Text="{Binding Path=InputText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
    </DataTemplate>
    
    <DataTemplate x:Key="NavigationMenuItemDefaultTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3" />
                <ColumnDefinition Width="6" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border Background="DarkRed">
                <Border.Visibility>
                    <MultiBinding Converter="{StaticResource MultiBool2VisHid}">
                        <Binding Path="Selectable" />
                        <Binding Path="IsSelected" RelativeSource="{RelativeSource AncestorType={x:Type ListBoxItem}}" />
                    </MultiBinding>
                </Border.Visibility>
            </Border>
            <Image Grid.Column="2"
                   Source="{Binding Path=Icon}" />
            <StackPanel Grid.Column="3">
                <TextBlock Text="{Binding Path=Heading}"
                           Style="{StaticResource NavigationMenuItemHeadingStyle}" />
                <TextBlock Text="{Binding Path=SubHeading}"
                           Visibility="{Binding Path=SubHeading, Converter={StaticResource EmpTxt2VisCol}}"
                           Style="{StaticResource NavigationMenuItemSubHeadingStyle}"/>
            </StackPanel>

        </Grid>
    </DataTemplate>
    
    <!-- Switch the content of the ListBoxItem bound to the underlying model's enum property -->
    <DataTemplate x:Key="NavigationMenuItemContentSwitchingTemplate"
                  DataType="{x:Type nav:NavigationMenuItemModel}">
        <ContentControl Content="{Binding}">
            <ContentControl.Style>
                <Style TargetType="{x:Type ContentControl}">
                    <Setter Property="ContentTemplate"
                            Value="{StaticResource NavigationMenuItemDefaultTemplate}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=Kind}"
                                     Value="{x:Static nav:NavKind.Input}">
                            <Setter Property="ContentTemplate"
                                    Value="{StaticResource NavigationItemMenuInputTemplate}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
        </ContentControl>
    </DataTemplate>
    
    <Style x:Key="ListBoxItemSelectionAwareStyle"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="IsSelected"
                Value="{Binding Path=IsSelected, Mode=TwoWay}" />
        <Style.Triggers>
            <!-- remove the highlight selection if this is a textbox -->
            <DataTrigger Binding="{Binding Path=Kind}"
                         Value="{x:Static nav:NavKind.Input}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <ContentPresenter />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>